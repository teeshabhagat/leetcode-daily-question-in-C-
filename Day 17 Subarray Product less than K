class Solution {
public:


int numSubarrayProductLessThanK(vector<int>& nums, int k) {
    if (k <= 1)
        return 0;

    int count = 0;
    int product = 1;
    int left = 0;

    for (int right = 0; right < nums.size(); ++right) {
        product *= nums[right];
        
        while (product >= k) {
            product /= nums[left];
            left++;
        }
        
        count += (right - left + 1);
    }

    return count;
}

// Example usage:
int main() {
    vector<int> nums = {10, 5, 2, 6};
    int k = 100;
    int result = numSubarrayProductLessThanK(nums, k);
    return 0;
}

};
